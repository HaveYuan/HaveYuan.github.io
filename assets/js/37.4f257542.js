(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{541:function(t,e,r){"use strict";r.r(e);var s=r(4),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("相信各位在开发的时候应该有遇到这样一个场景，比如商品的图片浏览，有时图片的浏览会很大，多的时候达几百张或上千张，这样就需要swiper里需要很多swiper-item，如此一来渲染的时候就会很消耗性能，渲染时会有一大段的空白时间，有时还会造成卡顿，体验非常差，下面给大家介绍一下我的解决方案。")]),t._v(" "),r("h5",{attrs:{id:"首先是wxml结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#首先是wxml结构"}},[t._v("#")]),t._v(" 首先是wxml结构：")]),t._v(" "),r("p",[r("img",{attrs:{src:"/blog/swiper_detail/1.webp",alt:"图片"}})]),t._v(" "),r("h5",{attrs:{id:"js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[t._v("#")]),t._v(" js：")]),t._v(" "),r("p",[r("img",{attrs:{src:"/blog/swiper_detail/2.webp",alt:"图片"}})]),t._v(" "),r("p",[r("img",{attrs:{src:"/blog/swiper_detail/3.webp",alt:"图片"}})]),t._v(" "),r("p",[t._v("主要是利用current属性，swiper里面只放3个swiper-item，要显示的图片放在第二，第一和第三放的是加载的动画背景，步骤如下：")]),t._v(" "),r("ol",[r("li",[t._v("将请求到的数据存入一个数组picListAll内，这里不需要setData，只需要在data外面定义一个变量就行了，以减少渲染性能；")]),t._v(" "),r("li",[t._v("把要显示的图片路径赋值给picUrl；")]),t._v(" "),r("li",[t._v("切换的时候根据bindchange获取current属性，当current改变时判断当前图片在picListAll的index，根据index拿到图片再赋值给picUrl；")])]),t._v(" "),r("p",[t._v("主要实现步骤就是以上3 步，比较简单，要注意的是当切换到第一张和最后一张的时候要判断一下，把loding动画去掉，请求的时候还可以传入index参数以显示不同的图片，方便从前一页点击图片进入到此页面时能定位到该图片，例子里我是自己mock数据的，只是为了展示，如果你有服务器的话可以弄几百张看看效果，对比直接渲染和用以上方式渲染的差异。当然,这只是我的解决方案,如果各位有更好的方案欢迎一起讨论,一起进步。")]),t._v(" "),r("p",[t._v("完整代码："),r("a",{attrs:{href:"https://github.com/HaveYuan/swiper",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/HaveYuan/swiper"),r("OutboundLink")],1)]),t._v(" "),r("cheers"),t._v(" "),r("pay")],1)}),[],!1,null,null,null);e.default=a.exports}}]);